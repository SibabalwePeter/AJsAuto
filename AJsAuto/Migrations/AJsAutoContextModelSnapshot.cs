// <auto-generated />
using System;
using AJsAuto.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AJsAuto.Migrations
{
    [DbContext(typeof(AJsAutoContext))]
    partial class AJsAutoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AJsAuto.Models.Appointment", b =>
                {
                    b.Property<Guid>("AppointmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClientId");

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("EngineerId");

                    b.Property<int>("NumberOfItems");

                    b.Property<string>("TimeIn");

                    b.HasKey("AppointmentId");

                    b.HasIndex("ClientId");

                    b.HasIndex("EngineerId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("AJsAuto.Models.AppointmentItem", b =>
                {
                    b.Property<Guid>("AppointmentItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppointmentId");

                    b.Property<Guid>("ServiceItemId");

                    b.HasKey("AppointmentItemId");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ServiceItemId");

                    b.ToTable("AppointmentItems");
                });

            modelBuilder.Entity("AJsAuto.Models.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CellPhoneNumber");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Surname");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AJsAuto.Models.Engineer", b =>
                {
                    b.Property<Guid>("EngineerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<int>("SkillLevel");

                    b.Property<string>("Surname");

                    b.HasKey("EngineerId");

                    b.ToTable("Engineers");
                });

            modelBuilder.Entity("AJsAuto.Models.ServiceItem", b =>
                {
                    b.Property<Guid>("ServiceItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Duration");

                    b.Property<string>("Name");

                    b.Property<int>("SkillLevel");

                    b.HasKey("ServiceItemId");

                    b.ToTable("ServiceItems");
                });

            modelBuilder.Entity("AJsAuto.Models.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<DateTime>("LastLogin");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AJsAuto.Models.Appointment", b =>
                {
                    b.HasOne("AJsAuto.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AJsAuto.Models.Engineer", "Engineer")
                        .WithMany()
                        .HasForeignKey("EngineerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AJsAuto.Models.AppointmentItem", b =>
                {
                    b.HasOne("AJsAuto.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AJsAuto.Models.ServiceItem", "ServiceItem")
                        .WithMany()
                        .HasForeignKey("ServiceItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
